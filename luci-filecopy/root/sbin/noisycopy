#!/bin/sh

# http://cis.stvincent.edu/html/tutorials/unix/bshellref
# http://www.grymoire.com/Unix/Sh.html


if [ $# -ne 3 ]; then
	echo "noisycopy METHOD SOURCE DESTINATION"
	echo "methods: todo!"
	exit 1
fi

METHOD=$1
SOURCE=$(readlink -f "$2")
DESTINATION=$(readlink -f "$3")

if [ ! -r "$SOURCE" ]; then
	echo "Can't read from the source: $SOURCE"
	exit 1
fi

if [ ! -e "$DESTINATION" ]; then
	mkdir "$DESTINATION"
fi

if [ ! -w "$DESTINATION" ]; then
	echo "Can't write to the destination: $DESTINATION"
	exit 1
fi

if [ $METHOD != "overwrite"  -a  $METHOD != "noclobber" ]; then
	echo "Unknown method: $METHOD"
	exit 1
fi


echo "Counting files..."
FILES_DONE=0
FILES_COUNT=$(find $SOURCE -type f | wc -l)
echo "Files to copy: $FILES_COUNT"

# hold where the destination currently is, in step with the working directory
DESTINATION_CWD=$DESTINATION


rename_noclash () {
	local SRC=$1
	local DST=$SRC
	while [ -e "$DST" ]; do
		DST="$DST-1"
	done
	echo "Moving $SRC to $DST as it is in the way"
	mv $SRC $DST
}


copyfile () {
	FILES_DONE=`expr $FILES_DONE + 1`
	case $METHOD in
		overwrite )
			if [ ! -e $2 ]; then
				echo "$FILES_DONE/$FILES_COUNT Copy $1 to $2"
				cp -pf $1 $2
			else
				echo "$FILES_DONE/$FILES_COUNT Copy $1 overwriting $2"
				cp -pf $1 $2
			fi
			;;
		noclobber )
			if [ ! -e $2 ]; then
				echo "$FILES_DONE/$FILES_COUNT Copy $1 to $2"
				cp -p $1 $2
			else
				echo "$FILES_DONE/$FILES_COUNT Skip $1 (no-clobber $2)"
			fi
			;;
		* )
			echo "$FILES_DONE/$FILES_COUNT TODO: copy $1 to $2"
			;;
	esac
}


breadth_discover() {
	if [ -f "$1" ]; then
		# source is a single file
		local FILE_PATH=$(readlink -f "$i")
		local FILE_NAME=${FILE_PATH##*/}
		copyfile $FILE_PATH "$DESTINATION_CWD/$FILE_NAME"
		return
	fi
	
	# walk into this directory
	cd "$1"
	
	for i in *; do
		if [ -d "$i" ]; then
			local DIR_NAME=${i##*/}
			local TARGET_DIR="$DESTINATION_CWD/$DIR_NAME"
			
			# file is in the way of this folder. Rename the file and keep going
			if [ ! -d "$TARGET_DIR"  -a  -f "$TARGET_DIR" ]; then
				rename_noclash "$TARGET_DIR"
			fi
			
			if [ ! -e "$TARGET_DIR" ]; then
				echo "Making $TARGET_DIR"
				mkdir "$TARGET_DIR"
			fi
			
			local DESTINATION_LAST=$DESTINATION_CWD
			DESTINATION_CWD="$TARGET_DIR"
			breadth_discover "$i"
			DESTINATION_CWD=$DESTINATION_LAST
			cd ..
			
		elif [ -f "$i" ]; then
			local FILE_PATH=$(readlink -f "$i")
			local FILE_NAME=${FILE_PATH##*/}
			copyfile $FILE_PATH "$DESTINATION_CWD/$FILE_NAME"
		fi
		# ignore non-directory and non-file entries
	done
}

breadth_discover $SOURCE
